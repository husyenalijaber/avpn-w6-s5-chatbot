I’m developing a simple chatbot web application using Node.js + Express for the backend and Vanilla JavaScript for the frontend.

My backend provides a POST /chat endpoint. It expects a JSON body in this form:

{
  "conversation": [
    {
      "role": "user",
      "message": "<user_message>"
    }
  ]
}


The server uses the Google Gemini API to generate replies and responds with JSON like this:

{
  "success": true,
  "message": null,
  "data": "<gemini_ai_response>"
}


On the frontend, there’s a form with a text input and a submit button. When a user submits:

Their message should appear in the chat box.

A temporary “Thinking…” bot message should appear immediately.

The message should be sent as a POST request to /chat in the JSON format above.

When the server responds, replace the “Thinking…” message with the AI’s reply from the data property.

If something goes wrong or no reply is received, show “Sorry, no response received.” or “Failed to get response from server.”

Could you write the full @script.js
 for the frontend (Vanilla JS only) to implement this flow with proper error handling and DOM updates?

The HTML structure is:

<form id="chat-form">
  <input type="text" id="user-input" />
  <button type="submit">Send</button>
</form>
<div id="chat-box"></div>


Please return only the complete code for @script.js
 matching the backend API spec above.
